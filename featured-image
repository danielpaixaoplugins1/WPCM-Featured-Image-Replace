<?php
/**
 * Plugin Name: WPCM Featured Image Replace
 * Description: Automatically imports images from external URLs and sets them as featured images for posts, with enhanced capabilities.
 * Version: 2.1
 * Author: Daniel Oliveira da Paixao
 */

if (!defined('ABSPATH')) {
    exit; // Exit if accessed directly.
}

add_action('wp_loaded', 'check_posts_for_featured_images');

function check_posts_for_featured_images() {
    // Verifica se o usuário atual tem permissão para editar posts.
    if (!current_user_can('edit_posts')) {
        return;
    }

    $args = array(
        'posts_per_page' => -1,
        'post_type'      => 'post',
        'meta_query'     => array(
            array(
                'key'     => '_thumbnail_id',
                'compare' => 'NOT EXISTS'
            ),
        ),
    );

    $posts_without_images = get_posts($args);

    foreach ($posts_without_images as $post) {
        process_post_for_external_images($post);
    }
}

function process_post_for_external_images($post) {
    $pattern = '/<img[^>]+src="(http:\/\/|https:\/\/[^"]+)"[^>]*>/i';
    preg_match_all($pattern, $post->post_content, $matches);
    $image_urls = $matches[1];

    foreach ($image_urls as $image_url) {
        $image_url = esc_url_raw($image_url); // Sanitização da URL da imagem.
        if (!is_internal_link($image_url)) {
            $imported = import_and_attach_image_to_post($image_url, $post->ID);
            if ($imported) break;
        }
    }
}

function is_internal_link($url) {
    $url_host = parse_url($url, PHP_URL_HOST);
    $site_host = parse_url(get_site_url(), PHP_URL_HOST);
    return $url_host == $site_host;
}

function import_and_attach_image_to_post($image_url, $post_id) {
    if (!current_user_can('upload_files')) {
        return false; // Verifica se o usuário tem permissão para fazer upload de arquivos.
    }

    require_once(ABSPATH . 'wp-admin/includes/media.php');
    require_once(ABSPATH . 'wp-admin/includes/file.php');
    require_once(ABSPATH . 'wp-admin/includes/image.php');

    $tmp = download_url($image_url);
    if (is_wp_error($tmp)) {
        // Trata o erro sem expor detalhes sensíveis.
        error_log('Erro ao baixar a imagem: ' . $tmp->get_error_message());
        return false;
    }

    $file_array = array(
        'name'     => sanitize_file_name(basename($image_url)),
        'tmp_name' => $tmp
    );

    $id = media_handle_sideload($file_array, $post_id);
    if (is_wp_error($id)) {
        @unlink($file_array['tmp_name']);
        error_log('Erro ao importar a imagem: ' . $id->get_error_message());
        return false;
    }

    set_post_thumbnail($post_id, $id);

    return true;
}
